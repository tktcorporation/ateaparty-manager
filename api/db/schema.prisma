datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model TeaParty {
  id Int @id @default(autoincrement())

  scheduledAt   DateTime
  teaPartyStaff TeaPartyStaff?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeaPartyStaff {
  id Int @id @default(autoincrement())

  teaPartyId   Int      @unique
  teaParty     TeaParty @relation(fields: [teaPartyId], references: [id])
  mcStaffId    Int
  mcStaff      Member   @relation("McStaff", fields: [mcStaffId], references: [id])
  mcSubStaffId Int?
  mcSubStaff   Member?  @relation("McSubStaff", fields: [mcSubStaffId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ConfirmedSub {
  id        Int      @id @default(autoincrement())
  sub       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id Int @id @default(autoincrement())

  sub                  String                @unique
  name                 String
  pictureUrl           String
  miniConcertStaffWork MiniConcertStaffWork?
  teaPartyStaff        TeaPartyStaff[]       @relation("McStaff")
  teaPartySubStaff     TeaPartyStaff[]       @relation("McSubStaff")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MiniConcertStaffWorkEnergy {
  CanDo
  TeachMe
  NotNow
}

model MiniConcertStaffWork {
  id Int @id @default(autoincrement())

  management   MiniConcertStaffWorkEnergy @default(NotNow)
  mc           MiniConcertStaffWorkEnergy @default(NotNow)
  visitorGuide MiniConcertStaffWorkEnergy @default(NotNow)
  photography  MiniConcertStaffWorkEnergy @default(NotNow)

  member   Member @relation(fields: [memberId], references: [id])
  memberId Int    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RW_DataMigration {
  version    String   @id
  name       String
  startedAt  DateTime
  finishedAt DateTime
}
