name: Test, automerge(dependabot)
on:
  pull_request:

permissions:
  pull-requests: write
  contents: write
env:
  DEV_DISCORD_BOT_TOKEN: ${{ secrets.DEV_DISCORD_BOT_TOKEN }}
  DEV_DISCORD_GUILD_ID: ${{ secrets.DEV_DISCORD_GUILD_ID }}
  CI: 1

jobs:
  setup:
    timeout-minutes: 5
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Setup docker
        run: |
          docker compose build --progress=plain
          docker compose pull -q

      # ref: https://zenn.dev/link/comments/71195269e61d4f
      - name: cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .yarn/berry/cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: setup yarn
        run: docker compose run --rm -T app /bin/bash -c "yarn install --immutable"

      - name: cache workspace
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn/berry/cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-ateaparty-manager-${{ github.sha }}

  lint:
    timeout-minutes: 5
    needs: [setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Setup docker
        run: |
          docker compose build --progress=plain
          docker compose pull -q

      - name: restore workspace cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn/berry/cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-ateaparty-manager-${{ github.sha }}
      - name: lint
        run: docker compose run --rm -T app /bin/bash -c "yarn rw lint"

  test-api:
    timeout-minutes: 5
    needs: [setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Setup docker
        run: |
          docker compose build --progress=plain
          docker compose pull -q

      - name: restore workspace cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn/berry/cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-ateaparty-manager-${{ github.sha }}
      - name: test api
        run: docker compose run --rm -T app /bin/bash -c "yarn rw test api --no-watch"

  test-web:
    timeout-minutes: 5
    needs: [setup]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Setup docker
        run: |
          docker compose build --progress=plain
          docker compose pull -q

      - name: restore workspace cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn/berry/cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-ateaparty-manager-${{ github.sha }}
      - name: test web
        run: docker compose run --rm -T app /bin/bash -c "yarn rw test web --no-watch"

  dependabot:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    needs:
      - setup
      - lint
      - test-api
      - test-web
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.5.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
