name: Test, automerge(dependabot)
on:
  pull_request:

permissions:
  pull-requests: write
  contents: write

jobs:
  lint-and-test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    env:
      DEV_DISCORD_BOT_TOKEN: ${{ secrets.DEV_DISCORD_BOT_TOKEN }}
      DEV_DISCORD_GUILD_ID: ${{ secrets.DEV_DISCORD_GUILD_ID }}
      CI: 1
    steps:
      - uses: actions/checkout@v3

      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      # Pull the latest image to build, and avoid caching pull-only images.
      # (docker pull is faster than caching in most cases.)
      - run: docker-compose pull

      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: setup container
        run: docker-compose up -d

      - name: setup yarn
        run: docker-compose exec -T app /bin/bash -c "yarn"

      - if: always()
        name: lint
        run: docker-compose exec -T app /bin/bash -c "yarn rw lint"

      - if: always()
        name: test api
        run: docker-compose exec -T app /bin/bash -c "yarn rw test api --no-watch"

      - if: always()
        name: test web
        run: docker-compose exec -T app /bin/bash -c "yarn rw test web --no-watch"

  dependabot:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    needs: lint-and-test
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
